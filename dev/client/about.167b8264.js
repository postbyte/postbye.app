import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, j as add_location, m as attr_dev, k as insert_dev, l as append_dev, n as noop } from './client.140c5030.js';

/* src/routes/about.svelte generated by Svelte v3.20.1 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let section;
	let article;
	let h1;
	let t1;
	let t2;
	let p;
	let t3;
	let a0;
	let t4;
	let t5;
	let a1;
	let t6;
	let t7;

	const block = {
		c: function create() {
			t0 = space();
			section = element("section");
			article = element("article");
			h1 = element("h1");
			t1 = text("About");
			t2 = space();
			p = element("p");
			t3 = text("This site is built in\n      ");
			a0 = element("a");
			t4 = text("Svelte");
			t5 = text("\n      using the minimal CSS framework I wrote called\n      ");
			a1 = element("a");
			t6 = text("Fortune");
			t7 = text("\n      . The entire site is styled with just 8 lines of CSS variables and the\n      HTML/CSS/JS bundle is 200kb");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1myew8g\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", {});
			var section_nodes = children(section);
			article = claim_element(section_nodes, "ARTICLE", {});
			var article_nodes = children(article);
			h1 = claim_element(article_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "About");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(article_nodes);
			p = claim_element(article_nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "This site is built in\n      ");
			a0 = claim_element(p_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t4 = claim_text(a0_nodes, "Svelte");
			a0_nodes.forEach(detach_dev);
			t5 = claim_text(p_nodes, "\n      using the minimal CSS framework I wrote called\n      ");
			a1 = claim_element(p_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t6 = claim_text(a1_nodes, "Fortune");
			a1_nodes.forEach(detach_dev);
			t7 = claim_text(p_nodes, "\n      . The entire site is styled with just 8 lines of CSS variables and the\n      HTML/CSS/JS bundle is 200kb");
			p_nodes.forEach(detach_dev);
			article_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			add_location(h1, file, 10, 4, 98);
			attr_dev(a0, "href", "https://svelte.dev/");
			add_location(a0, file, 13, 6, 155);
			attr_dev(a1, "href", "https://github.com/atav1k/fortune");
			add_location(a1, file, 15, 6, 255);
			add_location(p, file, 11, 4, 117);
			add_location(article, file, 9, 2, 84);
			add_location(section, file, 8, 0, 72);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, article);
			append_dev(article, h1);
			append_dev(h1, t1);
			append_dev(article, t2);
			append_dev(article, p);
			append_dev(p, t3);
			append_dev(p, a0);
			append_dev(a0, t4);
			append_dev(p, t5);
			append_dev(p, a1);
			append_dev(a1, t6);
			append_dev(p, t7);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuMTY3YjgyNjQuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
